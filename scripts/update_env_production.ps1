<#
Interactive helper to update local .env.production safely.
Run in PowerShell (no elevated privileges required):
  ./scripts/update_env_production.ps1
The script will prompt for DATABASE_URL, UVICORN_WORKERS (default 2) and SECRET_KEY (hidden input).
It writes to .env.production and attempts to set restrictive ACLs on Windows via icacls.
#>

param()

function Prompt-SecureInput($prompt) {
    $secure = Read-Host -Prompt $prompt -AsSecureString
    $bstr = [System.Runtime.InteropServices.Marshal]::SecureStringToBSTR($secure)
    try { [System.Runtime.InteropServices.Marshal]::PtrToStringAuto($bstr) }
    finally { [System.Runtime.InteropServices.Marshal]::ZeroFreeBSTR($bstr) }
}

Write-Host "This will update .env.production in the repository root. The file is in .gitignore and will not be committed." -ForegroundColor Yellow

# Read current values for helpful defaults
$envPath = Join-Path -Path (Get-Location) -ChildPath ".env.production"
$curDB = "postgresql+psycopg2://postgres:postgres@localhost:5432/vpn"
$curWorkers = "2"
$curSecret = ""
if (Test-Path $envPath) {
    $lines = Get-Content $envPath -ErrorAction SilentlyContinue
    foreach ($l in $lines) {
        if ($l -match '^DATABASE_URL=(.+)$') { $curDB = $matches[1] }
        if ($l -match '^UVICORN_WORKERS=(.+)$') { $curWorkers = $matches[1] }
        if ($l -match '^SECRET_KEY=(.+)$') { $curSecret = $matches[1] }
    }
}

$dbInput = Read-Host -Prompt "DATABASE_URL (enter to keep current)" -Default $curDB
$workersInput = Read-Host -Prompt "UVICORN_WORKERS (enter to keep current)" -Default $curWorkers
$secretInput = Prompt-SecureInput "SECRET_KEY (input hidden)"
if ([string]::IsNullOrWhiteSpace($secretInput)) {
    if (-not [string]::IsNullOrWhiteSpace($curSecret)) { $secretInput = $curSecret }
}

if ([string]::IsNullOrWhiteSpace($secretInput)) {
    Write-Error "SECRET_KEY is empty. Aborting without writing file."; exit 1
}

$content = @()
$content += "# Production environment file - DO NOT COMMIT"
$content += "# Generated by scripts/update_env_production.ps1 on $(Get-Date -Format o)"
$content += "DATABASE_URL=$dbInput"
$content += "UVICORN_WORKERS=$workersInput"
$content += "SECRET_KEY=$secretInput"
$content += ""
$content += "# Optional: add LOG_LEVEL, other flags"

# Write file with UTF8 without BOM
Set-Content -Path $envPath -Value $content -Encoding utf8

Write-Host ".env.production written to: $envPath" -ForegroundColor Green

# Attempt to restrict file permissions on Windows
if ($IsWindows) {
    try {
        icacls $envPath /inheritance:r | Out-Null
        $user = "$env:USERNAME"
        icacls $envPath /grant:r "$user:(R,W)" | Out-Null
        Write-Host "Restricted file ACLs (Windows): inheritance removed, granted R/W to current user." -ForegroundColor Green
    } catch {
        Write-Warning "Failed to adjust ACLs with icacls. Ensure the file is protected manually if necessary."
    }
} else {
    # On non-windows, attempt chmod 600
    try { chmod 600 $envPath 2>$null; Write-Host "Set file mode to 600." -ForegroundColor Green } catch { }
}

Write-Host "Done. File is ignored by Git (ensure .gitignore has .env.production)." -ForegroundColor Cyan
